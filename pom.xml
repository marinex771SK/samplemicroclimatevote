<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 2016 Microprofile.io ~ ~ Licensed under the Apache License,
	Version 2.0 (the "License"); ~ you may not use this file except in compliance
	with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0
	~ ~ Unless required by applicable law or agreed to in writing, software ~
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the
	License for the specific language governing permissions and ~ limitations
	under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>sample.microclimate</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<artifactId>microservice-vote</artifactId>
	<packaging>war</packaging>

	<name>Conference :: Vote</name>
	<parent>
			<groupId>net.wasdev.wlp.maven.parent</groupId>
			<artifactId>liberty-maven-app-parent</artifactId>
			<version>2.1.2</version>
	</parent>

	<properties>

		<!-- Liberty server properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<app.name>microservice-vote</app.name>
		<testServerHttpPort>9080</testServerHttpPort>
		<testServerHttpsPort>9443</testServerHttpsPort>
		<warContext>/vote</warContext>
		<package.file>${project.build.directory}/${project.artifactId}-${project.version}.zip</package.file>
		<packaging.type>usr</packaging.type>
		<!-- Cloud Foundry/IBM Cloud properties -->
		<cf.context>mybluemix.net</cf.context>
		<cf.target>https://api.ng.bluemix.net</cf.target>
		<cf.space>dev</cf.space>
		<cf.context.root>${cf.host}.${cf.context}/${warContext}</cf.context.root>

		<!-- The Cloud Foundry or IBM Cloud organization, username and password can be
				entered here. -->
		<!-- <cf.org></cf.org> -->
		<!-- <cf.username></cf.username> -->
		<!-- <cf.password></cf.password> -->
		<!-- This is the host for your app in IBM Cloud and what it will be called in the dashboard. -->
		<cf.host>${app.name}</cf.host>

		<!-- <warName>vote-service-application</warName> <warVersion>1.0.0-SNAPSHOT</warVersion> -->

	</properties>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- <dependency> <groupId>net.wasdev.wlp.starters.microprofile</groupId>
			<artifactId>provided-pom</artifactId> <version>0.0.1-SNAPSHOT</version> <type>pom</type>
			<scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
	  	<dependency>
  			<groupId>javax.ws.rs</groupId>
  			<artifactId>javax.ws.rs-api</artifactId>
  			<version>2.0</version>
  			<scope>provided</scope>
  		</dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
			<scope>test</scope>
		</dependency>
		<!-- microprofile-1.2 -->
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.fault-tolerance</groupId>
			<artifactId>microprofile-fault-tolerance-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.metrics</groupId>
			<artifactId>microprofile-metrics-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.health</groupId>
			<artifactId>microprofile-health-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.github.wasdev.microprofile-conference</groupId>
			<artifactId>demo-bootstrap</artifactId>
			<version>1.0.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<id>default-test</id>
						<configuration>
							<excludes>
								<exclude>**/it/**</exclude>
							</excludes>
							<reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin to run functional tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/it/**</include>
							</includes>
							<systemPropertyVariables>
								<liberty.test.port>${testServerHttpPort}</liberty.test.port>
								<app.context.root>${warContext}</app.context.root>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify-results</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipTests>true</skipTests>
					<summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
					<reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
<profiles>
	<profile>
			<id>liberty</id>
			<activation>
					<property>
							<name>libertyEnv</name>
							<value>!microclimate</value>
					</property>
			</activation>
			<build>
					<plugins>
							<!-- Default enablement of liberty-maven plugin -->
							<plugin>
									<groupId>net.wasdev.wlp.maven.plugins</groupId>
									<artifactId>liberty-maven-plugin</artifactId>
									<version>2.1.1</version>
									<extensions>true</extensions>
									<configuration>
											<looseApplication>false</looseApplication>
											<!--appsDirectory>apps</appsDirectory-->
											<assemblyArtifact>
													<groupId>com.ibm.websphere.appserver.runtime</groupId>
													<artifactId>wlp-webProfile7</artifactId>
													<version>17.0.0.4</version>
													<type>zip</type>
											</assemblyArtifact>
											<configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
											<serverEnv>${basedir}/src/main/liberty/config/server.env</serverEnv>
											<jvmOptionsFile>${basedir}/src/main/liberty/config/jvm.options</jvmOptionsFile>
											<packageFile>${package.file}</packageFile>
											<include>${packaging.type}</include>
											<bootstrapProperties>
													<default.http.port>${testServerHttpPort}</default.http.port>
													<default.https.port>${testServerHttpsPort}</default.https.port>
													<app.location>${project.artifactId}-${project.version}.war</app.location>
											</bootstrapProperties>
											<installAppPackages>project</installAppPackages>
									</configuration>
									<executions>
											<execution>
													<id>install-feature</id>
													<phase>prepare-package</phase>
													<goals>
														<goal>install-feature</goal>
													</goals>
													<configuration>
															<features>
																	<acceptLicense>true</acceptLicense>
															</features>
															<outputDirectory>target/liberty-alt-output-dir</outputDirectory>
													</configuration>
											</execution>
									</executions>
							</plugin>
					</plugins>
			</build>
	</profile>
	<profile>
			<id>microclimate</id>
			<activation>
					<property>
							<name>libertyEnv</name>
							<value>microclimate</value>
					</property>
			</activation>
			<build>
					<directory>${microclimateOutputDir}</directory>
					<plugins>
							<!-- Enablement of liberty-maven plugin in microclimate -->
							<plugin>
									<groupId>net.wasdev.wlp.maven.plugins</groupId>
									<artifactId>liberty-maven-plugin</artifactId>
									<version>2.1.2</version>
									<extensions>true</extensions>
									<configuration>
											<looseApplication>true</looseApplication>
											<appsDirectory>apps</appsDirectory>
											<installDirectory>/opt/ibm/wlp</installDirectory>
											<userDirectory>${project.build.directory}/liberty/wlp/usr</userDirectory>
											<configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
											<serverEnv>${basedir}/src/main/liberty/config/server.env</serverEnv>
											<jvmOptionsFile>${basedir}/src/main/liberty/config/jvm.options</jvmOptionsFile>
											<packageFile>${package.file}</packageFile>
											<include>${packaging.type}</include>
											<bootstrapProperties>
													<default.http.port>${testServerHttpPort}</default.http.port>
													<default.https.port>${testServerHttpsPort}</default.https.port>
													<app.location>${project.artifactId}-${project.version}.war</app.location>
											</bootstrapProperties>
											<installAppPackages>project</installAppPackages>
									</configuration>
							</plugin>
					</plugins>
			</build>
	</profile>
</profiles>
</project>
